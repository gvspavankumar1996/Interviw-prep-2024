//count number of subarrays that

'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}


/*
 * Complete the 'countSubarrays' function below.
 *
 * The function is expected to return a LONG_INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER_ARRAY numbers
 *  2. INTEGER k
 */

function countSubarrays(numbers, k) {
    let result=[]
    let temp=[]
    // let count=0
function recursiveSubArray(arr,i){
    
   if(i===arr.length){
       result.push([...temp])
        return
    }
    temp.push(numbers[i])
    //[2,3] 
    recursiveSubArray(temp,i+1)
    temp.pop()
    
    recursiveSubArray(temp,i+1)
    
   }
   
   recursiveSubArray(numbers,0)
}


function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const numbersCount = parseInt(readLine().trim(), 10);

    let numbers = [];

    for (let i = 0; i < numbersCount; i++) {
        const numbersItem = parseInt(readLine().trim(), 10);
        numbers.push(numbersItem);
    }

    const k = parseInt(readLine().trim(), 10);

    const result = countSubarrays(numbers, k);

    ws.write(result + '\n');

    ws.end();
}